name: Build and Test Unity Project

on:
  workflow_dispatch:
  pull_request:
    branches: [main, dev]

jobs:
  buildForAllSupportedPlatforms:
    name: Build Unity Project for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - name: Cache Unity Files
        uses: actions/cache@v4
        with:
          path: SealTeam7/Library
          key: Library-${{ hashFiles('SealTeam7/Assets/**', 'SealTeam7/Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: SealTeam7
          targetPlatform: ${{ matrix.targetPlatform }}
          buildsPath: Builds
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: Builds/${{ matrix.targetPlatform }}


  testForAllSupportedPlatforms:
    name: Test Unity Project on ${{ matrix.targetPlatform }} in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
        testMode:
          - playmode
          - editmode
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v4
        with:
          path: SealTeam7/Library
          key: Library-${{ hashFiles('SealTeam7/Assets/**', 'SealTeam7/Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: SealTeam7
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: >-
            generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}